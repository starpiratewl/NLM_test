## test data
## 1.
library("meshr")
data(geneid.cummeRbund)                ## all the genes
data(sig.geneid.cummeRbund)            ## DEGs

dim(geneid.cummeRbund)                 ## to see how many genes
## [1] 303   2

dim(sig.geneid.cummeRbund)
## [1] 104   2

head(geneid.cummeRbund)
##    SYMBOL ENTREZID
## 1   OR4F5    79501
## 2  OR4F16    81399
## 3  SAMD11   148398
## 4  KLHL17   339451
## 5 PLEKHN1    84069
## 6   ISG15     9636



head(sig.geneid.cummeRbund)
##    SYMBOL ENTREZID
## 1  KLHL17   339451
## 2 PLEKHN1    84069
## 3    AGRN   375790
## 4  TTLL10   254173
## 5  SCNN1D     6339
## 6    VWA1    64856


library("fdrtool") 
library("MeSH.Hsa.eg.db")

# like topGO, it need to construct a MeSHHyperGParams object to specify all the parameters when do enrichment.
meshParams <- new("MeSHHyperGParams", #
                  geneIds = sig.geneid.cummeRbund[, 2], #
                  universeGeneIds = geneid.cummeRbund[, 2], #
                  annotation = "MeSH.Hsa.eg.db", #
                  category = "C", # like the classification of BP,MF,CC in GO
                  database = "gene2pubmed", #can be gendoo, gene2pubmed or RBBH
                  pvalueCutoff = 0.05, #
                  pAdjust = "none") ## pAdjust is set to none because this is really a very limited example,most of the times we can set it to BH, QV or FDR.
                  
                  
meshR <- meshHyperGTest(meshParams)             ## hypergeometry calculation of pvalue

meshR                                           ## to see what kind of object the mesh is, is it like a GO?
##MeSH enrichment analysis for category Diseases 
##Annotation package used:  MeSH.Hsa.eg.db 
##The correspondance is retrived from:  gendoo 
##Number of MeSH terms identified:  9 

head(summary(meshR))
##       MESHID       Pvalue OddsRatio ExpCount Count Size              MESHTERM GENEID SOURCEID
##15774 D009361 0.0002619206  3.942771 11.32673    21   33 Neoplasm Invasiveness   1576     <NA>
##15775 D009361 0.0002619206  3.942771 11.32673    21   33 Neoplasm Invasiveness   6279     <NA>
##15776 D009361 0.0002619206  3.942771 11.32673    21   33 Neoplasm Invasiveness   2778     <NA>
##15777 D009361 0.0002619206  3.942771 11.32673    21   33 Neoplasm Invasiveness    894     <NA>
##15778 D009361 0.0002619206  3.942771 11.32673    21   33 Neoplasm Invasiveness   2524     <NA>
##15779 D009361 0.0002619206  3.942771 11.32673    21   33 Neoplasm Invasiveness   7306     <NA>


result <- summary(meshR)[summary(meshR)$GENEID %in% sig.geneid.cummeRbund[, 2],]

save.abst(result)














## another example
library(meshr)
library(fdrtool)
library(org.MeSH.Hsa.eg.db)
allgene <- select(MeSH.Hsa.eg.db, columns="GENEID", keytype="SOURCEDB", keys="gene2pubmed")
alllgene <- as.character(allgene$GENEID)
siggene <- sig.geneid.cummeRbund[, 2]
meshParams <- new("MeSHHyperGParams", 
                  geneIds = siggene,
                  universeGeneIds = alllgene,
                  annotation = "MeSH.Hsa.eg.db", 
                  category = "G", 
                  database = "gene2pubmed",
                  pvalueCutoff = 0.05,
                  pAdjust = "QV")
output <- meshHyperGTest(meshParams)

result <- summary(ouput)

result_f <- result[result$GENEID $in$ siggene, ]

save.pdf(output)  ## save all the pdf files, be careful to use this...









################################
## attributes of some databases
################################
keytypes(MeSH.Hsa.eg.db)
##[1] "GENEID"       "MESHID"       "MESHCATEGORY" "SOURCEID"     "SOURCEDB"    
keytypes(MeSH.Aca.eg.db)
##[1] "GENEID"       "MESHID"       "MESHCATEGORY" "SOURCEID"     "SOURCEDB"    
keytypes(MeSH.Bsu.168.eg.db)
##[1] "GENEID"       "MESHID"       "MESHCATEGORY" "SOURCEID"     "SOURCEDB"   
keytypes(MeSH.Syn.eg.db)
##[1] "GENEID"       "MESHID"       "MESHCATEGORY" "SOURCEID"     "SOURCEDB" 


head(select(MeSH.Hsa.eg.db,keys = "gene2pubmed", columns = c("GENEID","MESHID","MESHCATEGORY","SOURCEID","SOURCEDB"),keytype = "SOURCEDB"))
##  GENEID  MESHID MESHCATEGORY SOURCEID    SOURCEDB
##1      1 D000251            D 19056867 gene2pubmed
##2      1 D000293            M 21591266 gene2pubmed
##3      1 D000328            M 18706098 gene2pubmed
##4      1 D000328            M 19056867 gene2pubmed
##5      1 D000328            M 23418544 gene2pubmed
##6      1 D000328            M  8889549 gene2pubmed




###################################################################
## get the genesymbol according to geneid, use mygene here
###################################################################
library(mygene)
getGene(1)
##$`_id`
##[1] "1"

##$entrezgene
##[1] 1

##$name
##[1] "alpha-1-B glycoprotein"

##$symbol
##[1] "A1BG"

##$taxid
##[1] 9606


library(mygene)
xli  <-  c('DDX26B','CCDC83',  'MAST3', 'RPL11', 'ZDHHC20',  'LUC7L3',  'SNORD49A',  'CTSH', 'ACOT8')
queryMany(xli, scopes="symbol", fields=c("uniprot", "ensembl.gene", "reporter"), species="human")







###################################################################
## test of select use of MeSH.XXX.eg.db packages
###################################################################
setwd("D:\\importantbk\\learning\\meshr\\Analysis")
setwd("D:/importantbk/learning/meshr/Analysis")


# DEG of previous study (t-test + Q-value)
DEG1 <- read.csv("Rat/DEGlist.csv")

# No. of DEG
length(which(DEG1[,2] < 0.2)) # 505
DEGprobe1 <- as.character(DEG1[which(DEG1[,2] < 0.2), 1]) # Affy Probe
Symbol1 <- mget(DEGprobe1, env=rat2302SYMBOL) # Gene Symbol

# Gene ID of DEG
ID1 <- unlist(mget(DEGprobe1, env=rat2302ENTREZID)) # Entrez Gene ID
ID1 <- ID1[which(!is.na(ID1))]

# Gene ID of all genes
allprobe1 <- as.character(DEG1[, 1])
allID1 <- unlist(mget(allprobe1, env=rat2302ENTREZID))
allID1 <- allID1[which(!is.na(allID1))]


test1 <- select(MeSH.Rno.eg.db, columns=columns(MeSH.Rno.eg.db), keytype=keytypes(MeSH.Rno.eg.db), keys="114766")
test2 <- select(MeSH.Rno.eg.db, columns=columns(MeSH.Rno.eg.db), keytype="Geneid", keys="114766")
test3 <- select(MeSH.Rno.eg.db, columns=columns(MeSH.Rno.eg.db), keytype="GENEID", keys=ID1[1])

## they are all the same
dim(test1)
##[1] 243   5
dim(test2)
##[1] 243   5
dim(test3)
##[1] 243   5





###################################################################
## a real GEO case study
###################################################################
library("meshr")

library("fdrtool") 
library("MeSH.Hsa.eg.db")

setwd("D:\\importantbk\\learning\\meshr\\limma_test")

allgeneid <- read.csv(file = "DE_genelist_id_all.txt", sep = "\t", header = F, stringsAsFactor = F)$V1
siggeneid <- read.csv(file = "DE_genelist_id_sig.txt", sep = "\t", header = F, stringsAsFactor = F)$V1




# like topGO, it need to construct a MeSHHyperGParams object to specify all the parameters when do enrichment.
meshParams <- new("MeSHHyperGParams", #
                  geneIds = siggeneid, #
                  universeGeneIds = allgeneid, #
                  annotation = "MeSH.Hsa.eg.db", #
                  category = "C", # like the classification of BP,MF,CC in GO
                  database = "gene2pubmed", #can be gendoo, gene2pubmed or RBBH
                  pvalueCutoff = 0.05, #
                  pAdjust = "none") ## pAdjust is set to none because this is really a very limited example,most of the times we can set it to BH, QV or FDR.
                  
                  
meshR <- meshHyperGTest(meshParams)             ## hypergeometry calculation of pvalue

meshR                                           ## to see what kind of object the mesh is, is it like a GO?
##MeSH enrichment analysis for category Diseases 
##Annotation package used:  MeSH.Hsa.eg.db 
##The correspondance is retrived from:  gendoo 
##Number of MeSH terms identified:  9 

head(summary(meshR))
##       MESHID       Pvalue OddsRatio ExpCount Count Size              MESHTERM GENEID SOURCEID
##15774 D009361 0.0002619206  3.942771 11.32673    21   33 Neoplasm Invasiveness   1576     <NA>
##15775 D009361 0.0002619206  3.942771 11.32673    21   33 Neoplasm Invasiveness   6279     <NA>
##15776 D009361 0.0002619206  3.942771 11.32673    21   33 Neoplasm Invasiveness   2778     <NA>
##15777 D009361 0.0002619206  3.942771 11.32673    21   33 Neoplasm Invasiveness    894     <NA>
##15778 D009361 0.0002619206  3.942771 11.32673    21   33 Neoplasm Invasiveness   2524     <NA>
##15779 D009361 0.0002619206  3.942771 11.32673    21   33 Neoplasm Invasiveness   7306     <NA>


result <- summary(meshR)[summary(meshR)$GENEID %in% siggeneid,]

write.table(result, file = "MESH_result.txt",quote = F, row.names = F, col.names = T, sep = "\t")

save.abst(result)




##################################
## dealing with the mesh result
##################################

setwd("D:\\importantbk\\learning\\meshr\\limma_test")

result_tab <- read.csv(file = "MESH_result.txt", sep = "\t", stringsAsFactor = F)


geneid <- result_tab$GENEID

library(biomaRt)

mart <- useMart("ENSEMBL_MART_ENSEMBL", dataset = "hsapiens_gene_ensembl", host="www.ensembl.org")

##genesymbol <- getBM(attributes=c('hgnc_symbol'),filters = 'entrezgene', values = geneid,mart = mart)
genesymbol <- geneid

for (i in 1:length(geneid)){
  genesymbol[i] <- getBM(attributes=c('hgnc_symbol'),filters = 'entrezgene', values = as.character(geneid[i]),mart = mart)$hgnc_symbol
}

## view the overall distribution of pubmed papaers
barplot(table(result_tab$MESHTERM))

## view the distributions of MeSH terms containing over 100 pubmed papaers 
over100 <- table(result_tab$MESHTERM)[table(result_tab$MESHTERM)>100]

barplot(over100, ylim = c(-600,1500),names.arg=F)

text(x = 1:length(over100), y = -200, labels = names(over100),cex =1, srt = 65)


## view the terms by the means of pvalue
test <- unique(result_tab[,c(1,2,3,4,5,6,7)])

test_20 <- head(test,20)

barplot(test_20$Pvalue,main="the most significant MeSH terms",xlab="P-value",horiz=TRUE,names=FALSE)

text(-0.00000000000000001,1:20,test_20$MESHTERM,cex=0.8,xpd=T,srt=0,pos=4)




